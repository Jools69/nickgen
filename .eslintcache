[{"/Users/Jools/Documents/Web Development/NickGen/nickgen/src/index.js":"1","/Users/Jools/Documents/Web Development/NickGen/nickgen/src/reportWebVitals.js":"2","/Users/Jools/Documents/Web Development/NickGen/nickgen/src/App.js":"3","/Users/Jools/Documents/Web Development/NickGen/nickgen/src/NickGenerator.js":"4","/Users/Jools/Documents/Web Development/NickGen/nickgen/src/ColoursSlider.js":"5","/Users/Jools/Documents/Web Development/NickGen/nickgen/src/ColourPickers.js":"6","/Users/Jools/Documents/Web Development/NickGen/nickgen/src/CodedNick.js":"7","/Users/Jools/Documents/Web Development/NickGen/nickgen/src/Footer.js":"8","/Users/Jools/Documents/Web Development/NickGen/nickgen/src/hooks/useLocalStorageState.js":"9","/Users/Jools/Documents/Web Development/NickGen/nickgen/src/Character.js":"10","/Users/Jools/Documents/Web Development/NickGen/nickgen/src/CheckBox.js":"11","/Users/Jools/Documents/Web Development/NickGen/nickgen/src/hooks/useLocalStorageReducer.js":"12","/Users/Jools/Documents/Web Development/NickGen/nickgen/src/data/initialNickState.js":"13","/Users/Jools/Documents/Web Development/NickGen/nickgen/src/data/initialGlobalStylesState.js":"14","/Users/Jools/Documents/Web Development/NickGen/nickgen/src/hooks/useFirstRender.js":"15","/Users/Jools/Documents/Web Development/NickGen/nickgen/src/contexts/nickGen.context.js":"16","/Users/Jools/Documents/Web Development/NickGen/nickgen/src/reducers/nickGenReducer.js":"17","/Users/Jools/Documents/Web Development/NickGen/nickgen/src/data/initialNickGenState.js":"18","/Users/Jools/Documents/Web Development/NickGen/nickgen/src/data/colourModes.js":"19","/Users/Jools/Documents/Web Development/NickGen/nickgen/src/McColours.js":"20","/Users/Jools/Documents/Web Development/NickGen/nickgen/src/data/mcDefaultColours.js":"21"},{"size":500,"mtime":1611249033697,"results":"22","hashOfConfig":"23"},{"size":362,"mtime":1611249033698,"results":"24","hashOfConfig":"23"},{"size":901,"mtime":1613638434252,"results":"25","hashOfConfig":"23"},{"size":8200,"mtime":1614419108438,"results":"26","hashOfConfig":"23"},{"size":600,"mtime":1611314914537,"results":"27","hashOfConfig":"23"},{"size":605,"mtime":1612829818934,"results":"28","hashOfConfig":"23"},{"size":7155,"mtime":1614422492612,"results":"29","hashOfConfig":"23"},{"size":455,"mtime":1611314322625,"results":"30","hashOfConfig":"23"},{"size":656,"mtime":1613244853982,"results":"31","hashOfConfig":"23"},{"size":2586,"mtime":1614371303158,"results":"32","hashOfConfig":"23"},{"size":428,"mtime":1613224949488,"results":"33","hashOfConfig":"23"},{"size":766,"mtime":1612884753906,"results":"34","hashOfConfig":"23"},{"size":752,"mtime":1613245162647,"results":"35","hashOfConfig":"23"},{"size":187,"mtime":1613244853981,"results":"36","hashOfConfig":"23"},{"size":222,"mtime":1613244853981,"results":"37","hashOfConfig":"23"},{"size":719,"mtime":1613657239097,"results":"38","hashOfConfig":"23"},{"size":5573,"mtime":1613770975540,"results":"39","hashOfConfig":"23"},{"size":1305,"mtime":1613770356268,"results":"40","hashOfConfig":"23"},{"size":98,"mtime":1613638155142,"results":"41","hashOfConfig":"23"},{"size":1467,"mtime":1614371882891,"results":"42","hashOfConfig":"23"},{"size":1377,"mtime":1614364330296,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"ofxd0e",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/Jools/Documents/Web Development/NickGen/nickgen/src/index.js",[],["89","90"],"/Users/Jools/Documents/Web Development/NickGen/nickgen/src/reportWebVitals.js",[],"/Users/Jools/Documents/Web Development/NickGen/nickgen/src/App.js",[],"/Users/Jools/Documents/Web Development/NickGen/nickgen/src/NickGenerator.js",["91","92","93"],"/Users/Jools/Documents/Web Development/NickGen/nickgen/src/ColoursSlider.js",[],"/Users/Jools/Documents/Web Development/NickGen/nickgen/src/ColourPickers.js",[],"/Users/Jools/Documents/Web Development/NickGen/nickgen/src/CodedNick.js",["94"],"/Users/Jools/Documents/Web Development/NickGen/nickgen/src/Footer.js",[],"/Users/Jools/Documents/Web Development/NickGen/nickgen/src/hooks/useLocalStorageState.js",[],["95","96"],"/Users/Jools/Documents/Web Development/NickGen/nickgen/src/Character.js",[],"/Users/Jools/Documents/Web Development/NickGen/nickgen/src/CheckBox.js",[],"/Users/Jools/Documents/Web Development/NickGen/nickgen/src/hooks/useLocalStorageReducer.js",[],"/Users/Jools/Documents/Web Development/NickGen/nickgen/src/data/initialNickState.js",[],"/Users/Jools/Documents/Web Development/NickGen/nickgen/src/data/initialGlobalStylesState.js",[],"/Users/Jools/Documents/Web Development/NickGen/nickgen/src/hooks/useFirstRender.js",[],"/Users/Jools/Documents/Web Development/NickGen/nickgen/src/contexts/nickGen.context.js",[],"/Users/Jools/Documents/Web Development/NickGen/nickgen/src/reducers/nickGenReducer.js",["97"],"import { colourModes } from '../data/colourModes';\nimport chroma from 'chroma-js';\n\nexport function nickGenReducer(state, action) {\n    const mapAttrToName = (n, attr, val) => {\n        return n.map(c => {\n            return c.locked ? c : { ...c, [attr]: val };\n        });\n    }\n\n    const mapGradientToName = (name, override = false) => {\n        // Create the gradient\n        let gradient = chroma.scale(state.colours).mode('lab');\n        // Copy the current name object into a temp placeholder.\n        let unlockedName = name.map((c, i) => ({char: c, ogIndex: i})).filter(el => (!el.char.locked) || override);\n        const tempName = unlockedName.map((el, index) => {\n            const offset = (1.0 / (unlockedName.length - 1)) * index;\n            return { ...el, char: {...el.char, colour: gradient(offset)}};\n        });\n        // Here, we have the unlocked chars in an array, with the gradient applied, with ogIndex\n        // Now we need to map through the input name array, and if we have a matching ogIndex in\n        // tempName, we need to return the tempName char, else the input char.\n        const mappedName = name.map ((char, index) => {\n            const unlockedIndex = tempName.findIndex(el => el.ogIndex === index);\n            if(unlockedIndex > -1)\n                return tempName[unlockedIndex].char;\n            else\n                return char;\n        });\n        return mappedName;\n    }\n\n    const mapColoursToName = (name) => {\n        switch (state.colourMode) {\n            case colourModes.gradient:\n                return mapGradientToName(name);\n            case colourModes.single:\n                return name.map(c => ({...c, colour: chroma(state.singleColour)}));\n        }\n    }\n\n    let tempName;\n    let newColours;\n    \n    switch (action.type) {\n        case 'toggleLock':\n            tempName = state.name.map((c, i) => (i === action.index ? {...c, locked: !c.locked} : c));\n            return { ...state, name: tempName };\n        case 'lockAll':\n            tempName = state.name.map(c => ({ ...c, locked: true }));\n            return { ...state, name: tempName };\n        case 'unlockAll':\n            tempName = state.name.map(c => ({ ...c, locked: false }));\n            return { ...state, name: tempName }; \n        case 'toggleLocks':\n            tempName = state.name.map(c => ({...c, locked: !c.locked}));\n            return { ...state, name: tempName };\n        case 'changeNumberOfColours':\n            newColours = [...state.colours].concat(['#ffffff', '#ffffff']).splice(0, action.to);\n            return { ...state, numberOfColours: action.to, colours: newColours};\n        case 'updateColour':\n            newColours = [...state.colours];\n            newColours[action.index] = action.to;\n            return { ...state, colours: newColours};\n        case 'updateNick':\n            tempName = [...state.name];\n            let newName = action.newName;\n\n            // If the new name is less than the current name, we need to truncate the copy to match;\n            if (newName.length < tempName.length)\n                tempName = tempName.slice(0, newName.length);\n            else if (newName.length > tempName.length) {\n                // We need to append instances of the char object onto tempName until it's the correct length.\n                while (newName.length > tempName.length) {\n                    tempName.push({\n                        bold: state.bold,\n                        strikethrough: state.strikethrough,\n                        underline: state.underline,\n                        italic: state.italic,\n                        magic: false,\n                        char: '',\n                        colour: '#ffffff',\n                        locked: false,\n                    });\n                }\n            }\n            // At this point, tempName = the correct length of newName.\n            // Now we need to map the characters from the new name into the tempName object\n            tempName = tempName.map((c, i) => {\n                return (\n                    { ...c, char: newName.charAt(i) }\n                );\n            });\n    \n            // and update the colour mappings.\n            tempName = mapColoursToName(tempName);\n            return {...state, name: tempName};\n        case 'name':\n            return { ...state, name: action.name };\n        case 'globalStyle':\n            return { ...state, globalStyles: {...state.globalStyles, [action.field]: action.value }};\n        case 'applyStyleToName':\n            tempName = mapAttrToName(state.name, action.field, action.value);\n            return {...state, name: tempName};\n        case 'resetStyles':\n            const clearedStyles = {\n                bold: false,\n                underline: false,\n                strikethrough: false,\n                italic: false,\n            };\n            return {...state, globalStyles: clearedStyles, name: state.name.map(c => ({...c, ...clearedStyles, locked: false}))};\n        case 'applyColours':\n            tempName = [...state.name];\n            tempName = mapColoursToName(tempName);\n            return {...state, name: tempName};\n        case 'updateCharColour':\n            tempName = [...state.name];\n            tempName[action.index].colour = action.colour;\n            return {...state, name: tempName};\n        case 'changeColourMode':\n            return {...state, colourMode: colourModes[action.mode]};\n        case 'updateSingleColour':\n            return {...state, singleColour:action.to};\n        default:\n            return state;\n    }\n}\n\n","/Users/Jools/Documents/Web Development/NickGen/nickgen/src/data/initialNickGenState.js",[],"/Users/Jools/Documents/Web Development/NickGen/nickgen/src/data/colourModes.js",[],"/Users/Jools/Documents/Web Development/NickGen/nickgen/src/McColours.js",[],"/Users/Jools/Documents/Web Development/NickGen/nickgen/src/data/mcDefaultColours.js",[],{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":172,"column":25,"nodeType":"104","endLine":172,"endColumn":85},{"ruleId":"102","severity":1,"message":"103","line":176,"column":25,"nodeType":"104","endLine":176,"endColumn":87},{"ruleId":"102","severity":1,"message":"103","line":180,"column":25,"nodeType":"104","endLine":180,"endColumn":87},{"ruleId":"105","severity":1,"message":"106","line":123,"column":32,"nodeType":"107","messageId":"108","endLine":123,"endColumn":33},{"ruleId":"98","replacedBy":"109"},{"ruleId":"100","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":34,"column":9,"nodeType":"113","messageId":"114","endLine":39,"endColumn":10},"no-native-reassign",["115"],"no-negated-in-lhs",["116"],"jsx-a11y/alt-text","Embedded <object> elements must have alternative text by providing inner text, aria-label or aria-labelledby props.","JSXOpeningElement","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat",["115"],["116"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-global-assign","no-unsafe-negation"]